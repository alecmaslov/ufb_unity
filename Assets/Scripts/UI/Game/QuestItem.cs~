using System.Collections;
using System.Collections.Generic;
using UFB.Character;
using UFB.Events;
using UFB.Network.RoomMessageTypes;
using UFB.StateSchema;
using UnityEngine;
using UnityEngine.UI;

public class QuestItem : MonoBehaviour
{
    public Image questImage;
    public Text questName;
    public Text questDescription;
    public Transform resultListPanel;
    public Text coinText;
    public Image itemImage;
    public Image powerImage;
    public Image meleeImage;
    public Image manaImage;

    public GameObject completedImage;
    
    public Quest selectedQuest;
    public void InitDate(Quest quest)
    {
        selectedQuest = quest;
        questImage.sprite = GlobalResources.instance.quests[quest.id];
        questName.text = quest.name;
        questDescription.text = $"(Normal) {quest.description}";
        coinText.text = quest.coin.ToString();
        itemImage.sprite = GlobalResources.instance.items[quest.itemId];
        powerImage.sprite = GlobalResources.instance.powers[quest.powerId];
        meleeImage.gameObject.SetActive(quest.melee != 0);
        manaImage.gameObject.SetActive(quest.mana != 0);
        
        completedImage.SetActive(quest.complete >= quest.target);
        
        gameObject.SetActive(true);
    }

    public void OnCompleteQuest()
    {
        if (selectedQuest.complete >= selectedQuest.target)
        {
            List<ResultItem> items = new List<ResultItem>();
            List<ResultItem> stacks = new List<ResultItem>();
            List<ResultItem> powers = new List<ResultItem>();
            
            items.Add(new ResultItem(selectedQuest.itemId, 1));
            powers.Add(new ResultItem(selectedQuest.powerId, 1));
            if (selectedQuest.melee > 0)
            {
                items.Add(new ResultItem(selectedQuest.melee, 1));
            }

            if (selectedQuest.mana > 0)
            {
                items.Add(new ResultItem(selectedQuest.mana, 1));
            }
            
            EventBus.Publish(
                RoomSendMessageEvent.Create(
                    GlobalDefine.SERVER_MESSAGE.COMPLETE_QUEST,
                    new RequestQuestCompleteMessage
                    {
                        characterId = CharacterManager.Instance.PlayerCharacter.Id,
                        questId = selectedQuest.id,
                    }
                )
            );
            
            UIGameManager.instance.itemResultPanel.InitPanel(items, stacks, powers, selectedQuest.coin);
        }
    }
    
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
