//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Input/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace UFB.Input
{
    public partial class @GameInput: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GameInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""OrbitView"",
            ""id"": ""7489db06-c285-40b9-a2ca-0ef713fbc534"",
            ""actions"": [
                {
                    ""name"": ""TouchInput"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0b93547b-d14e-48f7-873a-f6710a360d09"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""c653a1c4-1e1f-479c-a795-badf8fb265af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""4c4b6eb5-d862-4ff5-a0ec-1f53888f4cc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""b37c0540-5f6f-42b4-a802-7c8086ffa3b6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""PassThrough"",
                    ""id"": ""aef431a4-d644-4d6b-922d-6034c8ec0619"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OrbitCamera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8d733f67-848e-4936-9824-5885df07bd27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryPress"",
                    ""type"": ""Button"",
                    ""id"": ""27a5bd17-30ab-4be3-84ad-754c0d372af8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bbe4411c-b899-44b0-bb77-7745bcf9aeb7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TapSelect"",
                    ""type"": ""PassThrough"",
                    ""id"": ""195adaa1-42ad-40d8-8926-f9f89114f59e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MultitouchHold"",
                    ""type"": ""Button"",
                    ""id"": ""cfbc357f-930f-4267-8768-2351098df75e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""59b774cf-7429-4ee6-b954-babc14b755a3"",
                    ""path"": ""<Touchscreen>/primaryTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa750fc0-cff9-4212-83f5-e9f706605df3"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fa2b461-a1b5-4516-8018-53e794f8a708"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Main"",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11b1d581-24a3-4c17-815f-3bb4118a319e"",
                    ""path"": ""<Touchscreen>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""444e250a-251a-420c-abd9-47f3f49be549"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb38836c-903f-4ecb-b162-476841c983ad"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Touch"",
                    ""id"": ""4a1410ad-f9c5-4527-a762-309ecce21982"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c664b793-4882-47cc-b358-adceb9b90f32"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""93870d2f-0aa1-4c17-aa2e-27e637d06b8d"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3bee26ac-6f84-4732-bf1d-d1d9d34b3f5c"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""06c4de81-c81a-43dc-88b4-a327700a9c3a"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""630f17d4-1426-44e1-993b-e5ffe34db589"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""23f435a0-dad1-484f-a187-a40fa8766ec7"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0e081a62-ee26-45ef-9e6e-a739f194e50b"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""50ffc521-645c-481c-8b2f-5deb55bf9bab"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fc0f5a7d-25a0-48f4-a9d9-9cd535b7c980"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5ebe343b-aa0a-4575-bb86-b23c4e9d865e"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e56887f7-be59-48ee-9edc-97436764d779"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21c82bfe-b271-4572-b67b-e8c3dd7f8a3d"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TapSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56210b28-a676-49f9-a88d-358389fa717d"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TapSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9e3a324-5b7e-4849-a666-76b60ea0b2eb"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97458cde-6fb8-473b-9ed7-31ad99cdd2cd"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4de499a1-947e-4e99-82f6-c9ed71e17529"",
                    ""path"": ""<Touchscreen>/touch*/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MultitouchHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameUI"",
            ""id"": ""85e66857-faa2-45ec-b058-fc77eccd555e"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""3f2dd056-ed92-4b50-9220-59e3b28b5b81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swipe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""aec8fb8a-e779-4a59-811e-ab69f697e1df"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""775a05e6-3283-45e5-867a-326092524d88"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8dfe350-869a-4885-9716-7938e0efee0f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""084afe66-306c-4a95-a46e-702a21502104"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Main"",
            ""bindingGroup"": ""Main"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // OrbitView
            m_OrbitView = asset.FindActionMap("OrbitView", throwIfNotFound: true);
            m_OrbitView_TouchInput = m_OrbitView.FindAction("TouchInput", throwIfNotFound: true);
            m_OrbitView_TouchPress = m_OrbitView.FindAction("TouchPress", throwIfNotFound: true);
            m_OrbitView_MouseClick = m_OrbitView.FindAction("MouseClick", throwIfNotFound: true);
            m_OrbitView_RotateCamera = m_OrbitView.FindAction("RotateCamera", throwIfNotFound: true);
            m_OrbitView_ScrollZoom = m_OrbitView.FindAction("ScrollZoom", throwIfNotFound: true);
            m_OrbitView_OrbitCamera = m_OrbitView.FindAction("OrbitCamera", throwIfNotFound: true);
            m_OrbitView_PrimaryPress = m_OrbitView.FindAction("PrimaryPress", throwIfNotFound: true);
            m_OrbitView_PointerPosition = m_OrbitView.FindAction("PointerPosition", throwIfNotFound: true);
            m_OrbitView_TapSelect = m_OrbitView.FindAction("TapSelect", throwIfNotFound: true);
            m_OrbitView_MultitouchHold = m_OrbitView.FindAction("MultitouchHold", throwIfNotFound: true);
            // GameUI
            m_GameUI = asset.FindActionMap("GameUI", throwIfNotFound: true);
            m_GameUI_Select = m_GameUI.FindAction("Select", throwIfNotFound: true);
            m_GameUI_Swipe = m_GameUI.FindAction("Swipe", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // OrbitView
        private readonly InputActionMap m_OrbitView;
        private List<IOrbitViewActions> m_OrbitViewActionsCallbackInterfaces = new List<IOrbitViewActions>();
        private readonly InputAction m_OrbitView_TouchInput;
        private readonly InputAction m_OrbitView_TouchPress;
        private readonly InputAction m_OrbitView_MouseClick;
        private readonly InputAction m_OrbitView_RotateCamera;
        private readonly InputAction m_OrbitView_ScrollZoom;
        private readonly InputAction m_OrbitView_OrbitCamera;
        private readonly InputAction m_OrbitView_PrimaryPress;
        private readonly InputAction m_OrbitView_PointerPosition;
        private readonly InputAction m_OrbitView_TapSelect;
        private readonly InputAction m_OrbitView_MultitouchHold;
        public struct OrbitViewActions
        {
            private @GameInput m_Wrapper;
            public OrbitViewActions(@GameInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @TouchInput => m_Wrapper.m_OrbitView_TouchInput;
            public InputAction @TouchPress => m_Wrapper.m_OrbitView_TouchPress;
            public InputAction @MouseClick => m_Wrapper.m_OrbitView_MouseClick;
            public InputAction @RotateCamera => m_Wrapper.m_OrbitView_RotateCamera;
            public InputAction @ScrollZoom => m_Wrapper.m_OrbitView_ScrollZoom;
            public InputAction @OrbitCamera => m_Wrapper.m_OrbitView_OrbitCamera;
            public InputAction @PrimaryPress => m_Wrapper.m_OrbitView_PrimaryPress;
            public InputAction @PointerPosition => m_Wrapper.m_OrbitView_PointerPosition;
            public InputAction @TapSelect => m_Wrapper.m_OrbitView_TapSelect;
            public InputAction @MultitouchHold => m_Wrapper.m_OrbitView_MultitouchHold;
            public InputActionMap Get() { return m_Wrapper.m_OrbitView; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OrbitViewActions set) { return set.Get(); }
            public void AddCallbacks(IOrbitViewActions instance)
            {
                if (instance == null || m_Wrapper.m_OrbitViewActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_OrbitViewActionsCallbackInterfaces.Add(instance);
                @TouchInput.started += instance.OnTouchInput;
                @TouchInput.performed += instance.OnTouchInput;
                @TouchInput.canceled += instance.OnTouchInput;
                @TouchPress.started += instance.OnTouchPress;
                @TouchPress.performed += instance.OnTouchPress;
                @TouchPress.canceled += instance.OnTouchPress;
                @MouseClick.started += instance.OnMouseClick;
                @MouseClick.performed += instance.OnMouseClick;
                @MouseClick.canceled += instance.OnMouseClick;
                @RotateCamera.started += instance.OnRotateCamera;
                @RotateCamera.performed += instance.OnRotateCamera;
                @RotateCamera.canceled += instance.OnRotateCamera;
                @ScrollZoom.started += instance.OnScrollZoom;
                @ScrollZoom.performed += instance.OnScrollZoom;
                @ScrollZoom.canceled += instance.OnScrollZoom;
                @OrbitCamera.started += instance.OnOrbitCamera;
                @OrbitCamera.performed += instance.OnOrbitCamera;
                @OrbitCamera.canceled += instance.OnOrbitCamera;
                @PrimaryPress.started += instance.OnPrimaryPress;
                @PrimaryPress.performed += instance.OnPrimaryPress;
                @PrimaryPress.canceled += instance.OnPrimaryPress;
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @TapSelect.started += instance.OnTapSelect;
                @TapSelect.performed += instance.OnTapSelect;
                @TapSelect.canceled += instance.OnTapSelect;
                @MultitouchHold.started += instance.OnMultitouchHold;
                @MultitouchHold.performed += instance.OnMultitouchHold;
                @MultitouchHold.canceled += instance.OnMultitouchHold;
            }

            private void UnregisterCallbacks(IOrbitViewActions instance)
            {
                @TouchInput.started -= instance.OnTouchInput;
                @TouchInput.performed -= instance.OnTouchInput;
                @TouchInput.canceled -= instance.OnTouchInput;
                @TouchPress.started -= instance.OnTouchPress;
                @TouchPress.performed -= instance.OnTouchPress;
                @TouchPress.canceled -= instance.OnTouchPress;
                @MouseClick.started -= instance.OnMouseClick;
                @MouseClick.performed -= instance.OnMouseClick;
                @MouseClick.canceled -= instance.OnMouseClick;
                @RotateCamera.started -= instance.OnRotateCamera;
                @RotateCamera.performed -= instance.OnRotateCamera;
                @RotateCamera.canceled -= instance.OnRotateCamera;
                @ScrollZoom.started -= instance.OnScrollZoom;
                @ScrollZoom.performed -= instance.OnScrollZoom;
                @ScrollZoom.canceled -= instance.OnScrollZoom;
                @OrbitCamera.started -= instance.OnOrbitCamera;
                @OrbitCamera.performed -= instance.OnOrbitCamera;
                @OrbitCamera.canceled -= instance.OnOrbitCamera;
                @PrimaryPress.started -= instance.OnPrimaryPress;
                @PrimaryPress.performed -= instance.OnPrimaryPress;
                @PrimaryPress.canceled -= instance.OnPrimaryPress;
                @PointerPosition.started -= instance.OnPointerPosition;
                @PointerPosition.performed -= instance.OnPointerPosition;
                @PointerPosition.canceled -= instance.OnPointerPosition;
                @TapSelect.started -= instance.OnTapSelect;
                @TapSelect.performed -= instance.OnTapSelect;
                @TapSelect.canceled -= instance.OnTapSelect;
                @MultitouchHold.started -= instance.OnMultitouchHold;
                @MultitouchHold.performed -= instance.OnMultitouchHold;
                @MultitouchHold.canceled -= instance.OnMultitouchHold;
            }

            public void RemoveCallbacks(IOrbitViewActions instance)
            {
                if (m_Wrapper.m_OrbitViewActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IOrbitViewActions instance)
            {
                foreach (var item in m_Wrapper.m_OrbitViewActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_OrbitViewActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public OrbitViewActions @OrbitView => new OrbitViewActions(this);

        // GameUI
        private readonly InputActionMap m_GameUI;
        private List<IGameUIActions> m_GameUIActionsCallbackInterfaces = new List<IGameUIActions>();
        private readonly InputAction m_GameUI_Select;
        private readonly InputAction m_GameUI_Swipe;
        public struct GameUIActions
        {
            private @GameInput m_Wrapper;
            public GameUIActions(@GameInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Select => m_Wrapper.m_GameUI_Select;
            public InputAction @Swipe => m_Wrapper.m_GameUI_Swipe;
            public InputActionMap Get() { return m_Wrapper.m_GameUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameUIActions set) { return set.Get(); }
            public void AddCallbacks(IGameUIActions instance)
            {
                if (instance == null || m_Wrapper.m_GameUIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameUIActionsCallbackInterfaces.Add(instance);
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Swipe.started += instance.OnSwipe;
                @Swipe.performed += instance.OnSwipe;
                @Swipe.canceled += instance.OnSwipe;
            }

            private void UnregisterCallbacks(IGameUIActions instance)
            {
                @Select.started -= instance.OnSelect;
                @Select.performed -= instance.OnSelect;
                @Select.canceled -= instance.OnSelect;
                @Swipe.started -= instance.OnSwipe;
                @Swipe.performed -= instance.OnSwipe;
                @Swipe.canceled -= instance.OnSwipe;
            }

            public void RemoveCallbacks(IGameUIActions instance)
            {
                if (m_Wrapper.m_GameUIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameUIActions instance)
            {
                foreach (var item in m_Wrapper.m_GameUIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameUIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GameUIActions @GameUI => new GameUIActions(this);
        private int m_MainSchemeIndex = -1;
        public InputControlScheme MainScheme
        {
            get
            {
                if (m_MainSchemeIndex == -1) m_MainSchemeIndex = asset.FindControlSchemeIndex("Main");
                return asset.controlSchemes[m_MainSchemeIndex];
            }
        }
        public interface IOrbitViewActions
        {
            void OnTouchInput(InputAction.CallbackContext context);
            void OnTouchPress(InputAction.CallbackContext context);
            void OnMouseClick(InputAction.CallbackContext context);
            void OnRotateCamera(InputAction.CallbackContext context);
            void OnScrollZoom(InputAction.CallbackContext context);
            void OnOrbitCamera(InputAction.CallbackContext context);
            void OnPrimaryPress(InputAction.CallbackContext context);
            void OnPointerPosition(InputAction.CallbackContext context);
            void OnTapSelect(InputAction.CallbackContext context);
            void OnMultitouchHold(InputAction.CallbackContext context);
        }
        public interface IGameUIActions
        {
            void OnSelect(InputAction.CallbackContext context);
            void OnSwipe(InputAction.CallbackContext context);
        }
    }
}
